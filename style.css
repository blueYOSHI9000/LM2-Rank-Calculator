:root {
	/* Gradients */
	--bronzeG1: #ab6958;
	--bronzeG2: #c49890;
	--silverG1: #6296a7;
	--silverG2: #bfe5e3;
	--goldG1: #c08c46;
	--goldG2: #d0c2a3;

	--bronze: #ad6b63;
	--silver: #9fcdd5;
	--gold: #fbdf87;

	--siteContainerWidth: 900px;
}

html {
	width: 100%;
	height: 100%;

	font-family: 'Ad Lib';
	color: #fff;
	text-shadow: 3px 3px 0 #000;
}
body {
	width: 100%;
	height: 100%;

	margin:  0px;
	padding: 0px;
}

/**	This is needed because CSS and the scrollbar-gutter property is fucking stupid. This could all be in <html> or <body> but noooooooooooo, that would have been too simple.
 * 	The scrollbar-gutter property makes it so the layout doesn't shift when a scrollbar appears.
 * 	Issue is that there's a special exception in its specification. Normally the gutter (when the scrollbar isn't there) is treated as padding, meaning the background image can be seen in it.
 * 	HOWEVER, if scrollbar-gutter is used on the root element then it no longer treats it as padding but instead as the viewport, meaning there's an ugly fucking white bar instead of the background.
 * 	And that is why we had to create a whole extra element. Just so there's no ugly white bar. Utterly fucking stupid is what it is.
 * 	Spent 40 minutes on this btw.
 */
#backgroundElement {
	width: 100%;
	height: 100%;

	margin:  0px;
	padding: 0px;

	overflow-y: auto; /* Needed so the scrollbar actually appears on this element */
	scrollbar-gutter: stable;

	/* The gradient here is just the one from #siteContainer below but adapted to work here since it just scrolls when used on #siteContainer which looks... bad. It looks bad.
	 * Basically, calculate where #siteContainer starts using (100% - 900px) / 2, then apply the offset by using a percentage of the #siteContainers width by multiplying it with 0.07 (= 7%). */
	background-image: linear-gradient(90deg, transparent calc((100% - var(--siteContainerWidth)) / 2), #000000bb calc((100% - var(--siteContainerWidth)) / 2 + (var(--siteContainerWidth) * 0.07)),
		#000000bb calc(100% - (100% - var(--siteContainerWidth)) / 2 - (var(--siteContainerWidth) * 0.07)), transparent calc(100% - (100% - var(--siteContainerWidth)) / 2)),
		url('./img/gloomy_manor.jpg');
	background-size: cover;
	background-position: center;
	background-attachment: fixed;
}

summary {
	cursor: pointer;
}

#siteContainer {
	height: 100%;
	width: var(--siteContainerWidth);

	margin: 0 auto;

	/*background: linear-gradient(90deg, transparent, #000000bb 7%, #000000bb 93%, transparent 100%);*/
}

#contentContainer {
	padding: 10px 10%;
}

/* #siteContainer starts scaling with the screen */
@media (max-width: 950px) {
	:root {
		--siteContainerWidth: 95vw !important;
	}

	html {
		overflow-x: hidden; /* Stops the scrollbar from showing up, mostly because of the gold indicator which is hard to fix due to it needing an absolute position. */
	}

	#siteContainer {
		width: 100%;
	}

	#contentContainer {
		margin: 0 calc(var(--siteContainerWidth) * 0.07);
		padding: 10px;
	}
}

/* #siteContainer stops scaling */
@media (max-width: 500px) {
	:root {
		--siteContainerWidth: 475px !important;
	}

	html {
		background-image: linear-gradient(#000000bb, #000000bb), url('./img/gloomy_manor.jpg');
	}

	#contentContainer {
		margin: 0;
	}
}

a, a:visited {
	color: #53aeff;
}

/* === No Script Reminder === */

#noscript {
	position: relative;

	margin-bottom: 20px;
	padding: 20px;
	padding-left: 65px;
}

#noscript:before, #noscript:after {
	content: "";
	z-index: -1;

	width: calc(100% + 20px);
	height: calc(100% + 20px);

	position: absolute;
	top: -10px;
	left: -10px;

	background-color: #e11c1c;

	clip-path: polygon(5px 11.29%, 99.87% 5.86%, 97.56% 97.75%, 23px 86.88%);
}
#noscript:before {
	background-color: #7d0505;

	transform: scale(1.02, 1.08);
}

#noscript > span {
	display: inline-block;
	position: absolute;

	width: 40px;
	left: 10px;

	background: #fff;
}
#noscript > span:nth-of-type(1) {
	height: 100px;
	top: 30px;
	left: 15px;

	background: #000;

	clip-path: polygon(4px 2.29%, 94.87% 6.86%, 77.56% 84.75%, 12px 88.88%);
}
#noscript > span:nth-of-type(3) {
	height: 100px;
	top: 25px;

	clip-path: polygon(4px 2.29%, 94.87% 6.86%, 77.56% 84.75%, 12px 88.88%);
}
#noscript > span:nth-of-type(2) {
	height: 40px;
	bottom: 25px;
	left: 15px;

	background: #000;

	clip-path: polygon(13px 17.29%, 79.87% 11.86%, 85.06% 79.75%, 11px 76.38%);
}
#noscript > span:nth-of-type(4) {
	height: 40px;
	bottom: 30px;

	clip-path: polygon(13px 17.29%, 79.87% 11.86%, 85.06% 79.75%, 11px 76.38%);
}

/* === SCORE INPUT === */
luigi-input {
	display: inline-block;
	width: 100px;
}
.scoreIcons {
	position: relative;

	width: 20px;

	vertical-align: middle;
	top: -2px;
}

#timeH, #timeMin, #timeS {
	width: 60px;
}
#ghostsCaptured {
	width: 80px;
}
#healthLost {
	width: 90px;
}

#liInput {
	height: 20px;
	width: calc(100% - 27px); /* I know what you might be thinking, "but shouldn't that just be - 20px?", the answer to that is yes. Browser disagrees though. So 27 it is. */

	border: 0px solid black;
	padding: 2px;
	padding-right: 5px;

	font-family: "Ad Lib";
	color: white;
	text-align: right;

	background-color: #517dffbf;

	clip-path: polygon(0px 7.84%, calc(100% - 0.7px) 15%, calc(100% - 5px) 95.06%, 9.5px 83.11%);
}

.liArrows {
	display: inline-block;
	position: relative;

	height: 24px;
	width: 20px;

	vertical-align: bottom;
	left: -5px;
	top: 1.5px;
}

.liArrows > span { /* .liUpArrowContainer, .liDownArrowContainer */
	position: absolute;

	height: 50%;
	width: 100%;

	background-color: #517dffbf;

	cursor: pointer;
}
.liArrows > span:hover {
	background-color: #3960d0bf;
}
.liArrows > span:active, #liInput:disabled + .liArrows > span {
	background-color: #1f3f99bf;
}
#liInput:disabled + .liArrows > span {
	cursor: default;
}

.liUpArrowContainer {
	clip-path: polygon(5.4px 19.7%, 100% 22.5%, 91% 94%, 3.4px 100%);
}
.liDownArrowContainer {
	top: 50%;

	clip-path: polygon(3.2px 6.8%, 90.3% 0%, 79.6% 81.2%, 1.3px 77%);
}

.liUpArrow, .liDownArrow {
	display: block;
	position: relative;

	height: 100%;
	width: 100%;

	background-color: #fff;
	clip-path: polygon(25% 20%, 50% 35%, 75% 10%, 52% 70%);

	margin-left: 1px;
}
.liArrows > span:hover > span { /* .liUpArrow, .liDownArrow */
	background-color: #c5d4ffbf;
}
.liArrows > span:active > span, #liInput:disabled + .liArrows > span > span { /* .liUpArrow, .liDownArrow */
	background-color: #6088fbbf;
}

.liUpArrow {
	transform: scale(-1, -1);
}

.liDownArrow {
	left: -0.5px;
	transform: scale(1, 1);
}

/* === PROGRESS BAR === */

#progressIndicators {
	position: relative;

	height: 80px;

	margin-bottom: 10px;
}

#progressIndicators luigi-input {
	position: relative;
	left: -20px; /* -40px (half of this width) + 20px (half of #progressIndicators width) */

	width: 80px;
}

.rankIndicatorIcons {
	height: 40px;
}
.rankIndicators {
	position: absolute;
}
#bronzeIndicator {
	left: -10px; /* -20px (half of this) + 10px (gap on progress bar, see script.js) */
}
#silverIndicator {
	left: calc(50% - 20px);
}
#goldIndicator {
	left: calc(100% - 30px); /* 100% - 20px - 10px, see above) */
}

.rankIndicatorArrow {
	display: block;
	position: relative;

	left: 10px;

	height: 20px;
	width: 20px;

	clip-path: polygon(3% 27%, 50% 50%, 100% 20%, 50% 100%);
}
#bronzeIndicator > .rankIndicatorArrow {
	background-color: var(--bronze);
}
#silverIndicator > .rankIndicatorArrow {
	background-color: var(--silver);
}
#goldIndicator > .rankIndicatorArrow {
	background-color: var(--gold);
}

#bronzeIndicator > luigi-input {
	visibility: hidden;
}

#progressContainer {
	display: block;

	height: 20px;
	width: 100%;

	padding: 2px;

	background-color: #000064;

	--polygon: polygon(0% 0%, 100% 5px, 99% 89.39%, 0.70% 100%);
	clip-path: var(--polygon);
}

#progressBarContainer {
	display: block;
	position: relative;

	height: 100%;
	width: 100%;

	scale: 0.999;
	clip-path: var(--polygon);
}
#progressBar {
	display: block;
	position: relative;
	visibility: hidden;

	height: 100%;
	width: 100%;

	/* Bronze */
	background: linear-gradient(90deg, var(--bronzeG1), var(--bronzeG2));
}
#progressBar.silverReached {
	background: linear-gradient(90deg, var(--silverG1), var(--silverG2));
}
#progressBar.goldReached {
	background: linear-gradient(90deg, var(--goldG1), var(--goldG2));
}

@media (max-width: 950px) {
	#progressIndicators {
		width: calc(var(--siteContainerWidth) - (var(--siteContainerWidth) * 0.07 * 2));
	}
	#progressContainer {
		width: calc(var(--siteContainerWidth) - (var(--siteContainerWidth) * 0.07 * 2));
	}
	#finalScoreContainer {
		width: calc(var(--siteContainerWidth) - (var(--siteContainerWidth) * 0.07 * 2)) !important;
	}
}

@media (max-width: 500px) {
	#progressIndicators {
		width: calc(95vw - 70px);
		margin-left: 30px;
	}
	#progressContainer {
		width: calc(95vw - 70px);
		margin-left: 30px;
	}
	#finalScoreContainer {
		width: calc(95vw - 70px) !important;
		margin-left: 30px;
	}
}


/* === RESULT === */
#finalScoreDisplay {
	position: relative;

	width: 100px;

	visibility: hidden;
}

#finalScoreArrow {
	left: 40px; /* 50px (half of parent) - 10px (half of this) */

	transform: scale(1, -1);
	background-color: gold;
}

#totalScoreText {
	display: block;
	position: relative;
	top: -5px;

	width: 100px;

	text-align: center;
}

#finalScoreDisplay > luigi-input {
	position: relative;
	left: 7px; /* 50px (half of parent) - 43px (half of this, 40px width + 7px padding) */
	top: -7px;

	width: 80px;
}

/*.resultItem {
	color: green;
}

#scoreResult {
	color: red;
}*/

/* === Calculate Button === */

.calcButton {
	position: relative;

	z-index: 0;

	margin: 15px;
	border: none;
	padding: 20px 45px;

	background:none;
	outline: none;

	font-family: 'Ad Lib';
	font-size: 30px;
	color: #fff;
	text-shadow: 3px 3px 0 #000;
}
.calcButton:hover {
	cursor: pointer;
}

.calcButton:before,
.calcButton:after {
	content: "";

	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;

	z-index: -1;

	background-color: #b5b5b566;

	clip-path: polygon(24px 12.39%, 93.13% 16px, 89.19% 76.89%, 12.7% 87.66%);
	/*transform: scale(-1, 1);*/
	scale: 1;

	transition: background-color .1s;
}

.calcButton:hover:before, .calcButton:focus:before,
.calcButton:hover:after , .calcButton:focus:after {
	background-color: #31aa1266;
	scale: 1.05;

	/* It only transitions the background-color when the transition is here because browsers suck massive ass, I suppose - this also means it only transitions to and not from */
	transition: background-color .1s;
	transition: scale .1s;
}
.calcButton:active:before,
.calcButton:active:after {
	background-color: #33971a66;
	scale: 1.1;

	transition: background-color .1s;
	transition: scale .1s;
}

/* === Level Select === */

#levelSelectContainer > div {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	gap: 40px 12px;
}

/* Background / Rectangle */
.levelSelect_level {
	position: relative;

	width: 190px;

	padding: 7px;
	margin-bottom: 2px;

	cursor: pointer;
	color: #62c2f0;

	background-color: #d5d5d56e;
	clip-path: polygon(0% 0%, 100% 9%, 99% 91%, 0.70% 100%);
}
.levelSelect_level:nth-of-type(even) {
	clip-path: polygon(0% 9%, 100% 0%, 99.30% 100%, 1% 91%);
}

/* Regular hover/focus */
.levelSelect_level:hover , .levelSelect_level:focus {
	background-color: #51f4286e;
	scale: 1.05;

	/* It only transitions the background-color when the transition is here because browsers suck massive ass, I suppose - this also means it only transitions to and not from */
	transition: background-color .1s;
	transition: scale .1s;
}
.levelSelect_level:active {
	background-color: #35b9146e;
	scale: 1.1;

	transition: background-color .1s;
	transition: scale .1s;
}

/* Boss */
.levelSelect_level.levelSelect_Boss {
	background-color: #ffcece6e;
	transition: background-color .1s;
}
.levelSelect_level.levelSelect_Boss:hover , .levelSelect_level.levelSelect_Boss:focus {
	background-color: #fd4b4b6e;
	transition: background-color .1s;
}
.levelSelect_level.levelSelect_Boss:active {
	background-color: #df2e2e6e;
	transition: background-color .1s;
}

/* Bonus */
.levelSelect_level.levelSelect_Bonus {
	background-color: #9bfbe96e;
	transition: background-color .1s;
}
.levelSelect_level.levelSelect_Bonus:hover , .levelSelect_level.levelSelect_Bonus:focus {
	background-color: #2cffd56e;
	transition: background-color .1s;
}
.levelSelect_level.levelSelect_Bonus:active {
	background-color: #0fb7956e;
	transition: background-color .1s;
}


.levelSelect_level img {
	position: absolute;

	height: 23px;
	width: 23px;
	top: 6px;
}


.levelSelect_scoreContainer {
	position: absolute;

	right: 0px;
	margin-right: 6px;
}
.levelSelect_scoreContainer > span {
	display: inline-block;

	width: 57px;
	padding-right: 4px;

	text-align: right;
}
.levelSelect_scoreContainer > span:nth-of-type(1) {
	color: var(--silver);
}
.levelSelect_scoreContainer > span:nth-of-type(2) {
	color: var(--gold);
}